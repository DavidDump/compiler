stdout:1845:
./tests/func.xx:1:1	 { IDENTIFIER   blo      }
./tests/func.xx:1:5	 { DOUBLECOLON  ::       }
./tests/func.xx:1:8	 { INT_LITERAL  3        }
./tests/func.xx:1:9	 { SEMICOLON    ;        }
./tests/func.xx:3:1	 { IDENTIFIER   foo      }
./tests/func.xx:3:5	 { DOUBLECOLON  ::       }
./tests/func.xx:3:8	 { LPAREN       (        }
./tests/func.xx:3:9	 { IDENTIFIER   arg1     }
./tests/func.xx:3:13	 { COLON        :        }
./tests/func.xx:3:15	 { TYPE         u8       }
./tests/func.xx:3:17	 { COMMA        ,        }
./tests/func.xx:3:19	 { IDENTIFIER   arg2     }
./tests/func.xx:3:23	 { COLON        :        }
./tests/func.xx:3:25	 { TYPE         u16      }
./tests/func.xx:3:28	 { RPAREN       )        }
./tests/func.xx:3:30	 { RARROW       ->       }
./tests/func.xx:3:33	 { TYPE         u32      }
./tests/func.xx:3:37	 { LSCOPE       {        }
./tests/func.xx:4:5	 { IDENTIFIER   foo      }
./tests/func.xx:4:9	 { INITIALIZER  :=       }
./tests/func.xx:4:12	 { INT_LITERAL  1        }
./tests/func.xx:4:13	 { SEMICOLON    ;        }
./tests/func.xx:5:5	 { IDENTIFIER   bar      }
./tests/func.xx:5:9	 { COLON        :        }
./tests/func.xx:5:11	 { TYPE         s64      }
./tests/func.xx:5:14	 { SEMICOLON    ;        }
./tests/func.xx:6:5	 { IDENTIFIER   bar      }
./tests/func.xx:6:9	 { ASSIGNMENT   =        }
./tests/func.xx:6:11	 { INT_LITERAL  2        }
./tests/func.xx:6:12	 { SEMICOLON    ;        }
./tests/func.xx:7:5	 { IDENTIFIER   baz      }
./tests/func.xx:7:9	 { DOUBLECOLON  ::       }
./tests/func.xx:7:12	 { INT_LITERAL  3        }
./tests/func.xx:7:13	 { SEMICOLON    ;        }
./tests/func.xx:9:5	 { RETURN       return   }
./tests/func.xx:9:12	 { INT_LITERAL  1        }
./tests/func.xx:9:13	 { SEMICOLON    ;        }
./tests/func.xx:10:1	 { RSCOPE       }        }
